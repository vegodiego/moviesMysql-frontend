{"version":3,"sources":["actionCreators.js","components/top-rated.js","components/favorites.js","components/popular.js","components/upcoming.js","components/now-playing.js","components/register.js","components/login.js","components/header.js","components/broken.js","components/noMatch.js","App.js","serviceWorker.js","store.js","index.js"],"names":["addFavorite","tokenUserId","movie","route","dispatch","axios","post","title","poster_path","release_date","vote_average","headers","then","response","type","object","setTimeout","catch","error","console","log","connect","state","broken","redirectLogin","topRatedMovies","addMovie","updateRedirectLogin","updateRegisterLogin","getInfoTopRatedUser","moviesFavorites","get","data","movies","i","results","length","user","push","j","k","getInfoTopRatedNotUser","props","useEffect","to","class","className","map","index","src","alt","style","width","slice","onClick","userFavorites","movieDeleted","getFavoriteMovies","deleteMovie","window","confirm","id","popularMovies","getInfoPopularUser","getInfoPopularNotUser","upcomingMovies","getInfoUpcomingUser","getInfoUpcomingNotUser","nowPlayingMovies","getInfoNowPlayingUser","getInfoNowPlayingNotUser","emailRegister","passwordRegister","errorRegister","redirectRegister","wrongEntry1Register","wrongEntry2Register","newRegister","updateLogin","closeUserExists","changeRegister","event","target","name","value","submitRegister","email","password","preventDefault","test","userId","onSubmit","for","onChange","placeholder","emailLogin","passwordLogin","errorLogin","wrongEntry1Login","wrongEntry2Login","updateRedirectRegister","updateRegister","closeErrorLogin","changeLogin","submitLogin","localStorage","setItem","getItem","logout","removeItem","data-toggle","data-target","aria-controls","aria-expanded","aria-label","updateBrokenFalse","NoMatch","App","exact","path","Component","Boolean","location","hostname","match","createStore","action","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5184046a.chunk.js","sourcesContent":["import axios from \"axios\";\n\n\n//todas los componentes\nconst currentUser = () =>{\n  return{\n    type: \"ESTABLECIENDO_USUARIO_ACTUAL\",\n    object: localStorage.getItem('tokenUserId')\n  }\n}\n\nconst updateBrokenTrue = () =>{\n  return{\n    type: \"ACTUALIZANDO_BROKEN\",\n    object: true\n  }\n}\n\n//broken\nconst updateBrokenFalse = () =>{\n  return{\n    type: \"ACTUALIZANDO_BROKEN\",\n    object: false\n  }\n}\n\n//login\nconst updateRedirectRegister = () =>{\n  return{\n    type: \"ACTUALIZANDO_REDIRECTREGISTER\",\n    object: null\n  }\n}\n\nconst updateRegister = () =>{\n  return dispatch => {\n    dispatch ({\n      type: \"ACTUALIZANDO_EMAIL_DE_REGISTER\",\n      object: \"\"\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_WRONGENTRY1_DE_REGISTER\",\n      object: false\n    }) \n    dispatch ({\n      type: \"ACTUALIZANDO_PASSWORD_DE_REGISTER\",\n      object: \"\"\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_WRONGENTRY2_DE_REGISTER\",\n      object: false\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_MENSAJE_DE_USUARIO_YA_EXISTE\", \n      object: false\n    })\n  }\n}\n\nconst closeErrorLogin = () =>{\n  return{\n    type: \"ACTUALIZANDO_MENSAJE_DE_USUARIO_INVALIDO\",\n    object: false\n  }\n}\n\nconst changeLogin = (event) =>{\n  if([event.target.name] == \"email\"){\n    return{\n      type: \"ACTUALIZANDO_EMAIL_DE_LOGIN\",\n      object: event.target.value\n    }\n  } else{\n    return{\n      type: \"ACTUALIZANDO_PASSWORD_DE_LOGIN\",\n      object: event.target.value\n    }\n  }\n}\n\nconst submitLogin = (email,password) =>{\n  return dispatch => { \n    if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) && password !== \"\" ){\n      dispatch ({\n        type: \"ACTUALIZANDO_WRONGENTRY1_DE_LOGIN\",\n        object: false\n      })\n      dispatch ({\n        type: \"ACTUALIZANDO_WRONGENTRY2_DE_LOGIN\",\n        object: false\n      })\n\n      axios.post(\"https://movies-mysql-backend.herokuapp.com/login\", {\n        email: email,\n        password: password\n      })\n      .then(response => {\n        if(response.data.tokenUserId != null){\n          localStorage.setItem('tokenUserId', response.data.tokenUserId);\n          dispatch ({ //acción para que todas las vistas reciban el nuevo user del localstorage en su key tokenUser\n            type: \"ESTABLECIENDO_USUARIO_ACTUAL\",\n            object: localStorage.getItem('tokenUserId')\n          })\n          dispatch ({\n            type: \"ACTUALIZANDO_REDIRECTLOGIN\",\n            object: \"/\"\n          })\n        } else{\n          dispatch ({\n            type: \"ACTUALIZANDO_MENSAJE_DE_USUARIO_INVALIDO\",\n            object: response.data.error\n          })\n          dispatch ({\n            type: \"ACTUALIZANDO_PASSWORD_DE_LOGIN\",\n            object: \"\"\n          })\n        }\n      })\n      .catch(error => {\n        dispatch ({\n          type: \"ACTUALIZANDO_BROKEN\",\n          object: true\n        })\n        console.log(error);\n      });\n    } else{\n      if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) === false){\n        dispatch ({\n          type: \"ACTUALIZANDO_WRONGENTRY1_DE_LOGIN\",\n          object: true\n        })\n      } else{\n        dispatch ({\n          type: \"ACTUALIZANDO_WRONGENTRY1_DE_LOGIN\",\n          object: false\n        })\n      }\n      if(password === \"\"){\n        dispatch ({\n          type: \"ACTUALIZANDO_WRONGENTRY2_DE_LOGIN\",\n          object: true\n        })\n      } else{\n        dispatch ({\n          type: \"ACTUALIZANDO_WRONGENTRY2_DE_LOGIN\",\n          object: false\n        })\n      }\n    }\n  }\n}\n\n//register\nconst updateLogin = () =>{\n  return dispatch => {\n    dispatch ({\n      type: \"ACTUALIZANDO_EMAIL_DE_LOGIN\",\n      object: \"\"\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_WRONGENTRY1_DE_LOGIN\",\n      object: false\n    }) \n    dispatch ({\n      type: \"ACTUALIZANDO_PASSWORD_DE_LOGIN\",\n      object: \"\"\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_WRONGENTRY2_DE_LOGIN\",\n      object: false\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_MENSAJE_DE_USUARIO_INVALIDO\",\n      object: false\n    })\n  }\n}\n\nconst closeUserExists = () =>{\n  return{\n    type: \"ACTUALIZANDO_MENSAJE_DE_USUARIO_YA_EXISTE\",\n    object: false\n  }\n}\n\nconst changeRegister = (event) =>{\n  if([event.target.name] == \"email\"){\n    return{\n      type: \"ACTUALIZANDO_EMAIL_DE_REGISTER\",\n      object: event.target.value\n    }\n  } else{\n    return{\n      type: \"ACTUALIZANDO_PASSWORD_DE_REGISTER\",\n      object: event.target.value\n    }\n  }\n}\n\nconst submitRegister = (email,password) =>{\n  return dispatch => {\n    if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) && password !== \"\" ){\n      dispatch ({\n        type: \"ACTUALIZANDO_WRONGENTRY1_DE_REGISTER\",\n        object: false\n      })\n      dispatch ({\n        type: \"ACTUALIZANDO_WRONGENTRY2_DE_REGISTER\",\n        object: false\n      })\n\n      axios.post(\"https://movies-mysql-backend.herokuapp.com/register\", {\n        email: email,\n        password: password\n      })\n      .then(response => {\n        if(response.data.userId != null){\n          dispatch ({\n            type: \"ACTUALIZANDO_REDIRECTREGISTER\",\n            object: \"/login\"\n          })\n          dispatch ({\n            type: \"ACTUALIZANDO_MENSAJE_DE_REGISTRO_EXITOSO\",\n            object: true\n          })\n          setTimeout(() =>{ \n            dispatch ({\n              type: \"ACTUALIZANDO_MENSAJE_DE_REGISTRO_EXITOSO\",\n              object: false\n            })\n          }, 5000);\n          dispatch ({\n            type: \"ACTUALIZANDO_PASSWORD_DE_REGISTER\",\n            object: \"\"\n          })\n          dispatch ({\n            type: \"ACTUALIZANDO_EMAIL_DE_REGISTER\",\n            object: \"\"\n          })\n        } else{\n          dispatch ({\n            type: \"ACTUALIZANDO_MENSAJE_DE_USUARIO_YA_EXISTE\",\n            object: response.data.error\n          })\n          dispatch ({\n            type: \"ACTUALIZANDO_PASSWORD_DE_REGISTER\",\n            object: \"\"\n          })\n        }\n      })\n      .catch(error => {\n        dispatch ({\n          type: \"ACTUALIZANDO_BROKEN\",\n          object: true\n        })\n        console.log(error);\n      });\n    } else{\n      if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email) === false){\n        dispatch ({\n          type: \"ACTUALIZANDO_WRONGENTRY1_DE_REGISTER\",\n          object: true\n        })\n      } else{\n        dispatch ({\n          type: \"ACTUALIZANDO_WRONGENTRY1_DE_REGISTER\",\n          object: false\n        })\n      }\n      if(password === \"\"){\n        dispatch ({\n          type: \"ACTUALIZANDO_WRONGENTRY2_DE_REGISTER\",\n          object: true\n        })\n      } else{\n        dispatch ({\n          type: \"ACTUALIZANDO_WRONGENTRY2_DE_REGISTER\",\n          object: false\n        })\n      }\n    }\n  }\n}\n\n//favorites\nconst getFavoriteMovies = (tokenUserId) =>{\n  return dispatch => {\n    return axios.get(\"https://movies-mysql-backend.herokuapp.com/movies\",{ \n      headers: { \n        'Authorization': tokenUserId\n      }\n    })\n    .then(response => {\n      dispatch ({\n        type: \"OBTENIENDO_PELICULAS_FAVORITAS_DEL_USUARIO\",\n        object: response.data\n      })\n    })\n    .catch(error => {\n      dispatch ({\n        type: \"ACTUALIZANDO_BROKEN\",\n        object: true\n      })\n      console.log(error);\n    })\n  }\n}\n\nconst deleteMovie = (movie, tokenUserId) =>{\n  return dispatch => {\n    return axios.get(\"https://movies-mysql-backend.herokuapp.com/movies/\"+movie.id+\"/delete\",{\n      headers: { \n        'Authorization': tokenUserId\n      } \n    })\n    .then(response => {\n      dispatch ({\n        type: \"ACTUALIZANDO_MENSAJE_DE_PELICULA_ELIMINADA\",\n        object: true\n      })\n      setTimeout(() =>{ \n        dispatch ({\n          type: \"ACTUALIZANDO_MENSAJE_DE_PELICULA_ELIMINADA\",\n          object: false\n        })\n      }, 1000);\n    })\n    .catch(error => {\n      dispatch ({\n        type: \"ACTUALIZANDO_BROKEN\",\n        object: true\n      })\n      console.log(error);\n    })\n  } \n}\n\n//now-playing\nconst getInfoNowPlayingUser = (route,tokenUserId) =>{\n  var moviesFavorites\n  return dispatch => {\n    return axios.get(\"https://movies-mysql-backend.herokuapp.com/movies\",{ //obteniendo las películas favoritas del usuario si existe\n      headers: { \n        'Authorization': tokenUserId\n      }\n    })\n    .then(response => {\n      moviesFavorites = response.data \n      return axios.get(route) //obteniendo las películas   \n    })\n    .then(response => {\n      var movies =[];\n      for (var i = 0; i < response.data.results.length; i++) { //agregando user:false a cada película\n        var data = response.data.results[i]\n        data.user = false\n        movies.push(data)\n      }\n      for (var j = 0; j < movies.length; j++) { //cambiando user:true a las películas ya favoritas\n        for (var k = 0; k < moviesFavorites.length; k++) {\n          if(movies[j].title === moviesFavorites[k].title){\n            movies[j].user = true;\n          } \n        }\n      }\n      dispatch ({\n        type: \"ESTABLECIENDO_PELICULAS_DE_LA_VISTA_NOWPLAYING\", //estableciendo las peliculas con opción o no de agregar a favoritos\n        object: movies\n      })\n    })\n    .catch(error => {\n      dispatch ({\n        type: \"ACTUALIZANDO_BROKEN\",\n        object: true\n      })  \n      console.log(error);\n    })\n  } \n}\n\nconst getInfoNowPlayingNotUser = (route) =>{\n  return dispatch => {\n    return axios.get(route) //obteniendo las películas\n    .then(response => {\n      var movies =[];\n      for (var i = 0; i < response.data.results.length; i++) { //agregando user:false a cada película\n        var data = response.data.results[i]\n        data.user = false\n        movies.push(data)\n      }\n      dispatch ({\n        type: \"ESTABLECIENDO_PELICULAS_DE_LA_VISTA_NOWPLAYING\", //estableciendo las peliculas sin opción de agregar a favoritos\n        object: movies\n      })\n    })\n    .catch(error => {\n      dispatch ({\n        type: \"ACTUALIZANDO_BROKEN\",\n        object: true\n      })\n      console.log(error);\n    }) \n  } \n}\n\n//popular\nconst getInfoPopularUser = (route, tokenUserId) =>{\n  var moviesFavorites\n  return dispatch => {\n    return axios.get(\"https://movies-mysql-backend.herokuapp.com/movies\",{ //obteniendo las películas favoritas del usuario si existe\n      headers: { \n        'Authorization': tokenUserId\n      }\n    })\n    .then(response => {\n      moviesFavorites = response.data \n      return axios.get(route) //obteniendo las películas      \n    })\n    .then(response => {\n      var movies =[];\n      for (var i = 0; i < response.data.results.length; i++) { //agregando user:false a cada película\n        var data = response.data.results[i]\n        data.user = false\n        movies.push(data)\n      }\n      for (var j = 0; j < movies.length; j++) { //cambiando user:true a las películas ya favoritas\n        for (var k = 0; k < moviesFavorites.length; k++) {\n          if(movies[j].title === moviesFavorites[k].title){\n            movies[j].user = true;\n          } \n        }\n      }\n      dispatch ({\n        type: \"ESTABLECIENDO_PELICULAS_DE_LA_VISTA_POPULAR\", //estableciendo las peliculas con opción o no de agregar a favoritos\n        object: movies\n      })\n    })\n    .catch(error => {\n      dispatch ({\n        type: \"ACTUALIZANDO_BROKEN\",\n        object: true\n      })   \n      console.log(error);\n    })\n  } \n}\n\nconst getInfoPopularNotUser = (route) =>{\n  return dispatch => {\n    return axios.get(route) //obteniendo las películas\n    .then(response => {\n      var movies =[];\n      for (var i = 0; i < response.data.results.length; i++) { //agregando user:false a cada película\n        var data = response.data.results[i]\n        data.user = false\n        movies.push(data)\n      }\n      dispatch ({\n        type: \"ESTABLECIENDO_PELICULAS_DE_LA_VISTA_POPULAR\", //estableciendo las peliculas sin opción de agregar a favoritos\n        object: movies\n      })\n    })\n    .catch(error => {\n      dispatch ({\n        type: \"ACTUALIZANDO_BROKEN\",\n        object: true\n      })\n      console.log(error);\n    }) \n  } \n}\n\n//top-rated\nconst updateRedirectLogin = () =>{\n  return{\n    type: \"ACTUALIZANDO_REDIRECTLOGIN\",\n    object: null\n  }\n}\n\nconst updateRegisterLogin = () =>{\n  return dispatch => {\n    dispatch ({\n      type: \"ACTUALIZANDO_EMAIL_DE_LOGIN\",\n      object: \"\"\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_WRONGENTRY1_DE_LOGIN\",\n      object: false\n    }) \n    dispatch ({\n      type: \"ACTUALIZANDO_PASSWORD_DE_LOGIN\",\n      object: \"\"\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_WRONGENTRY2_DE_LOGIN\",\n      object: false\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_MENSAJE_DE_USUARIO_INVALIDO\",\n      object: false\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_EMAIL_DE_REGISTER\",\n      object: \"\"\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_WRONGENTRY1_DE_REGISTER\",\n      object: false\n    }) \n    dispatch ({\n      type: \"ACTUALIZANDO_PASSWORD_DE_REGISTER\",\n      object: \"\"\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_WRONGENTRY2_DE_REGISTER\",\n      object: false\n    })\n    dispatch ({\n      type: \"ACTUALIZANDO_MENSAJE_DE_USUARIO_YA_EXISTE\", \n      object: false\n    })\n  }\n}\n\nconst getInfoTopRatedUser = (route, tokenUserId) =>{\n  var moviesFavorites\n  return dispatch => {\n    return axios.get(\"https://movies-mysql-backend.herokuapp.com/movies\",{ //obteniendo las películas favoritas del usuario si existe\n      headers: { \n        'Authorization': tokenUserId\n      }\n    }) \n    .then(response => {\n      moviesFavorites = response.data \n      return axios.get(route) //obteniendo las películas      \n    })\n    .then(response => {\n      var movies =[];\n      for (var i = 0; i < response.data.results.length; i++) { //agregando user:false a cada película\n        var data = response.data.results[i]\n        data.user = false\n        movies.push(data)\n      }\n      for (var j = 0; j < movies.length; j++) { //cambiando user:true a las películas ya favoritas\n        for (var k = 0; k < moviesFavorites.length; k++) {\n          if(movies[j].title === moviesFavorites[k].title){\n            movies[j].user = true;\n          } \n        }\n      }\n      dispatch ({\n        type: \"ESTABLECIENDO_PELICULAS_DE_LA_VISTA_TOP-RATED\", //estableciendo las peliculas con opción o no de agregar a favoritos\n        object: movies\n      })\n    }) \n    .catch(error => {\n      dispatch ({\n        type: \"ACTUALIZANDO_BROKEN\",\n        object: true\n      })   \n      console.log(error);\n    })\n  } \n}\n\nconst getInfoTopRatedNotUser = (route) =>{\n  return dispatch => {\n    return axios.get(route) //obteniendo las películas\n    .then(response => {\n      var movies =[];\n      for (var i = 0; i < response.data.results.length; i++) { //agregando user:false a cada película\n        var data = response.data.results[i]\n        data.user = false\n        movies.push(data)\n      }\n      dispatch ({\n        type: \"ESTABLECIENDO_PELICULAS_DE_LA_VISTA_TOP-RATED\", //estableciendo las peliculas sin opción de agregar a favoritos\n        object: movies\n      })\n    })\n    .catch(error => {\n      dispatch ({\n        type: \"ACTUALIZANDO_BROKEN\",\n        object: true\n      })\n      console.log(error);\n    }) \n  } \n}\n\n//upcoming\nconst getInfoUpcomingUser = (route, tokenUserId) =>{\n  var moviesFavorites\n  return dispatch => {\n    return axios.get(\"https://movies-mysql-backend.herokuapp.com/movies\",{ //obteniendo las películas favoritas del usuario si existe\n      headers: { \n        'Authorization': tokenUserId\n      }\n    })\n    .then(response => {\n      moviesFavorites = response.data \n      return axios.get(route) //obteniendo las películas     \n    })\n    .then(response => {\n      var movies =[];\n      for (var i = 0; i < response.data.results.length; i++) { //agregando user:false a cada película\n        var data = response.data.results[i]\n        data.user = false\n        movies.push(data)\n      }\n      for (var j = 0; j < movies.length; j++) { //cambiando user:true a las películas ya favoritas\n        for (var k = 0; k < moviesFavorites.length; k++) {\n          if(movies[j].title === moviesFavorites[k].title){\n            movies[j].user = true;\n          } \n        }\n      }\n      dispatch ({\n        type: \"ESTABLECIENDO_PELICULAS_DE_LA_VISTA_UPCOMING\", //estableciendo las peliculas con opción o no de agregar a favoritos\n        object: movies\n      })\n    })  \n    .catch(error => {\n      dispatch ({\n        type: \"ACTUALIZANDO_BROKEN\",\n        object: true\n      })   \n      console.log(error);\n    })\n  } \n}\n\nconst getInfoUpcomingNotUser = (route) =>{\n  return dispatch => {\n    return axios.get(route) //obteniendo las películas\n    .then(response => {\n      var movies =[];\n      for (var i = 0; i < response.data.results.length; i++) { //agregando user:false a cada película\n        var data = response.data.results[i]\n        data.user = false\n        movies.push(data)\n      }\n      dispatch ({\n        type: \"ESTABLECIENDO_PELICULAS_DE_LA_VISTA_UPCOMING\", //estableciendo las peliculas sin opción de agregar a favoritos\n        object: movies\n      })\n    })\n    .catch(error => {\n      dispatch ({\n        type: \"ACTUALIZANDO_BROKEN\",\n        object: true\n      })\n      console.log(error);\n    }) \n  } \n}\n\n//componentes de tipo categoria\nconst addFavorite = (tokenUserId,movie,route) =>{\n  return dispatch => {\n    return axios.post(\"https://movies-mysql-backend.herokuapp.com/movies\", {\n      title: movie.title,\n      poster_path: movie.poster_path,\n      release_date: movie.release_date,\n      vote_average: movie.vote_average\n    },\n    {\n      headers: { \n        'Authorization': tokenUserId\n      }\n    })\n    .then(response => {\n      dispatch ({\n        type: \"ACTUALIZANDO_MENSAJE_DE_PELICULA_AGREGADA\",\n        object: true\n      })\n      setTimeout(() =>{ \n        dispatch ({\n          type: \"ACTUALIZANDO_MENSAJE_DE_PELICULA_AGREGADA\",\n          object: false\n        })\n      }, 1000);\n    })\n    .catch(error => {\n      dispatch ({\n        type: \"ACTUALIZANDO_BROKEN\",\n        object: true\n      })\n      console.log(error);\n    });\n  } \n}\n\n\nexport {updateBrokenTrue, updateBrokenFalse, currentUser, updateRegisterLogin, updateRegister, updateLogin, updateRedirectRegister, closeErrorLogin, changeLogin, submitLogin, closeUserExists, changeRegister, submitRegister, getFavoriteMovies, deleteMovie, getInfoNowPlayingUser, getInfoNowPlayingNotUser, getInfoPopularUser, getInfoPopularNotUser, updateRedirectLogin, getInfoTopRatedUser, getInfoTopRatedNotUser, getInfoUpcomingUser, getInfoUpcomingNotUser, addFavorite};","import '../stylesheets/views.css';\nimport React, {useEffect} from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {updateRedirectLogin, updateRegisterLogin , getInfoTopRatedUser, getInfoTopRatedNotUser, addFavorite} from \"../actionCreators\";\n\n\nconst TopRated = (props) => {\n  var route = \"https://api.themoviedb.org/3/movie/top_rated?api_key=ab577ff2988024eaa963076929b07afb&language=en-US&page=1\";\n\n  useEffect(() => { //useEffect se ejecuta al cargarse el componente y cada que props.addMovie evitando un bucle infinito\n    props.updateRedirectLogin();\n    props.updateRegisterLogin();\n\n    if (props.tokenUserId === null){\n      props.getInfoTopRatedNotUser(route);\n    } else{\n      props.getInfoTopRatedUser(route, props.tokenUserId);\n    }\n  },[props.addMovie]); \n\n  if (props.broken === true) {\n    return <Redirect to=\"/broken\" />\n  }\n\n  return (\n    <div class=\"container\">\n      <div className={props.addMovie === false ? \"d-none\": \"float-right sticky-top alert alert-success\"}>Movie added.</div>\n      <div class=\"btn-group mb-4\">\n        <Link to=\"/popular\" class=\"btn btn-info\">Popular</Link>\n        <Link to=\"/upcoming\" class=\"btn btn-info\">Upcoming</Link>\n        <Link to=\"/now-playing\" class=\"btn btn-info\">Now playing</Link>\n      </div>\n      <h2 class=\"text-center mb-4\">Top rated</h2>\n      <hr></hr>\n      <div class=\"row justify-content-around\">\n        {props.topRatedMovies.map((movie,index) =>\n          <div class=\"col-lg-3 col-md-4 col-sm-6 col-9\">\n            <div class=\"card\">   \n              <img class=\"card-img-top\" src={ \"https://image.tmdb.org/t/p/w220_and_h330_face\"+movie.poster_path} alt={\"Card image\"+index} style={{width:\"100%\"}}></img>\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">{movie.title}</h6>\n                <p class=\"card-text\">Year: {movie.release_date.slice(0,4)}</p>\n                <p class=\"card-text\">Punctuation: {movie.vote_average}</p>\n                <button onClick={() => props.addFavorite(props.tokenUserId,movie,{route})} className={props.tokenUserId === null || movie.user === true ? \"d-none\": \"btn btn-primary\"}>Add to favorites</button>\n              </div>\n            </div>\n          </div> \n        )}\n      </div>\n    </div>\n  );   \n}\n\n// keys values del state\nconst mapStateToProps = state => {\n  return {\n    broken: state.broken,\n    redirectLogin: state.redirectLogin,\n    topRatedMovies: state.topRatedMovies,\n    addMovie: state.addMovie,\n    tokenUserId: state.tokenUserId\n  }\n}\n\n// metodos \nconst mapDispatchToProps = dispatch => {\n  return {\n    updateRedirectLogin(){\n      dispatch(updateRedirectLogin());\n    },\n    updateRegisterLogin(){\n      dispatch(updateRegisterLogin());\n    },\n    getInfoTopRatedUser(route, tokenUserId){\n      dispatch(getInfoTopRatedUser(route, tokenUserId));\n    },\n    getInfoTopRatedNotUser(route){\n      dispatch(getInfoTopRatedNotUser(route));\n    },\n    addFavorite(movie,tokenUserId,route){\n      dispatch(addFavorite(movie,tokenUserId,route));\n    }\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopRated);","import '../stylesheets/views.css';\nimport React, {useEffect} from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {getFavoriteMovies, deleteMovie} from \"../actionCreators\";\n\n\nconst Favorites = (props) => {\n  useEffect(() => {\n    if (props.tokenUserId !== null) {\n      props.getFavoriteMovies(props.tokenUserId);\n    }\n  }, [props.movieDeleted]) //useEffect se ejecuta al cargarse el componente y cada que props.movieDeleted evitando un bucle infinito\n  \n  if (props.broken === true) {\n    return <Redirect to=\"/broken\" />\n  }\n  \n  if (props.tokenUserId === null) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <div class=\"container\">\n      <div className={props.movieDeleted === false ? \"d-none\": \"float-right sticky-top alert alert-success\"}>Movie deleted.</div>\n      <h2 class=\"text-center mb-4\">Favorites</h2>\n      <hr></hr>\n      <div class=\"row justify-content-around\">\n        {props.userFavorites.map((movie,index) =>\n          <div class=\"col-lg-3 col-md-4 col-sm-6 col-9\">\n            <div class=\"card\">   \n              <img class=\"card-img-top\" src={\"https://image.tmdb.org/t/p/w220_and_h330_face\"+movie.poster_path} alt={\"Card image\"+index} style={{width:\"100%\"}}></img>\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">{movie.title}</h6>\n                <p class=\"card-text\">Year: {movie.release_date.slice(0,4)}</p>\n                <p class=\"card-text\">Punctuation: {movie.vote_average}</p>\n                <button onClick={() => props.deleteMovie(movie, props.tokenUserId)} class=\"btn btn-danger\">Delete movie</button>\n              </div>\n            </div>\n          </div> \n        )}\n      </div>\n    </div>\n  );   \n};\n\n// keys values del state\nconst mapStateToProps = state => {\n  return {\n    broken: state.broken,\n    userFavorites: state.userFavorites,\n    tokenUserId: state.tokenUserId,\n    movieDeleted: state.movieDeleted\n  }\n}\n\n// metodos\nconst mapDispatchToProps = dispatch => {\n  return {\n    getFavoriteMovies(tokenUserId){\n      dispatch(getFavoriteMovies(tokenUserId));\n    },\n    deleteMovie(movie, tokenUserId){\n     if (window.confirm(\"Are you sure?\")){\n      dispatch(deleteMovie(movie, tokenUserId));\n     } \n    }\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);","import '../stylesheets/views.css';\nimport React, {useEffect} from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {getInfoPopularUser, getInfoPopularNotUser, addFavorite} from \"../actionCreators\";\n\n\nconst Popular = (props) => {\n  var route = \"https://api.themoviedb.org/3/movie/popular?api_key=ab577ff2988024eaa963076929b07afb&language=en-US&page=1\";\n\n  useEffect(() => {\n    if (props.tokenUserId === null){\n      props.getInfoPopularNotUser(route);\n    } else{\n      props.getInfoPopularUser(route, props.tokenUserId);\n    }\n  }, [props.addMovie]); //useEffect se ejecuta al cargarse el componente y cada que props.addMovie evitando un bucle infinito\n\n  if (props.broken === true) {\n    return <Redirect to=\"/broken\" />\n  }\n\n  return (\n    <div class=\"container\">\n      <div className={props.addMovie === false ? \"d-none\": \"float-right sticky-top alert alert-success\"}>Movie added.</div>\n      <div class=\"btn-group mb-4\">\n        <Link to=\"/\" class=\"btn btn-info\">Top rated</Link>\n        <Link to=\"/upcoming\" class=\"btn btn-info\">Upcoming</Link>\n        <Link to=\"/now-playing\" class=\"btn btn-info\">Now playing</Link>\n      </div>\n      <h2 class=\"text-center mb-4\">Popular</h2>\n      <hr></hr>\n      <div class=\"row justify-content-around\">\n        {props.popularMovies.map((movie,index) =>\n          <div class=\"col-lg-3 col-md-4 col-sm-6 col-9\">\n            <div class=\"card\">   \n              <img class=\"card-img-top\" src={ \"https://image.tmdb.org/t/p/w220_and_h330_face\"+movie.poster_path} alt={\"Card image\"+index} style={{width:\"100%\"}}></img>\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">{movie.title}</h6>\n                <p class=\"card-text\">Year: {movie.release_date.slice(0,4)}</p>\n                <p class=\"card-text\">Punctuation: {movie.vote_average}</p>\n                <button onClick={() => props.addFavorite(props.tokenUserId,movie,{route})} className={props.tokenUserId === null || movie.user === true ? \"d-none\": \"btn btn-primary\"}>Add to favorites</button>\n              </div>\n            </div>\n          </div> \n        )}\n      </div>\n    </div>\n  );   \n}\n\n// keys values del state\nconst mapStateToProps = state => {\n  return {\n    broken: state.broken,\n    popularMovies: state.popularMovies,\n    addMovie: state.addMovie,\n    tokenUserId: state.tokenUserId,\n  }\n}\n\n// metodos \nconst mapDispatchToProps = dispatch => {\n  return {\n    getInfoPopularUser(route, tokenUserId){\n      dispatch(getInfoPopularUser(route, tokenUserId));\n    },\n    getInfoPopularNotUser(route){\n      dispatch(getInfoPopularNotUser(route));\n    },\n    addFavorite(movie,tokenUserId,route){\n      dispatch(addFavorite(movie,tokenUserId,route));\n    }\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Popular);","import '../stylesheets/views.css';\nimport React, {useEffect} from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {getInfoUpcomingUser, getInfoUpcomingNotUser, addFavorite} from \"../actionCreators\";\n\n\nconst Upcoming = (props) => {\n  var route = \"https://api.themoviedb.org/3/movie/upcoming?api_key=ab577ff2988024eaa963076929b07afb&language=en-US&page=1\";\n\n  useEffect(() => {  //useEffect se ejecuta al cargarse el componente y cada que props.addMovie evitando un bucle infinito\n    if (props.tokenUserId === null){\n      props.getInfoUpcomingNotUser(route);\n    } else{\n      props.getInfoUpcomingUser(route, props.tokenUserId);\n    }\n  }, [props.addMovie]); \n\n  if (props.broken === true) {\n    return <Redirect to=\"/broken\" />\n  }\n\n  return (\n    <div class=\"container\">\n      <div className={props.addMovie === false ? \"d-none\": \"float-right sticky-top alert alert-success\"}>Movie added.</div>\n      <div class=\"btn-group mb-4\">\n        <Link to=\"/\" class=\"btn btn-info\">Top rated</Link>\n        <Link to=\"/popular\" class=\"btn btn-info\">Popular</Link>\n        <Link to=\"/now-playing\" class=\"btn btn-info\">Now playing</Link>\n      </div>\n      <h2 class=\"text-center mb-4\">Upcoming</h2>\n      <hr></hr>\n      <div class=\"row justify-content-around\">\n        {props.upcomingMovies.map((movie,index) =>\n          <div class=\"col-lg-3 col-md-4 col-sm-6 col-9\">\n            <div class=\"card\">   \n              <img class=\"card-img-top\" src={ \"https://image.tmdb.org/t/p/w220_and_h330_face\"+movie.poster_path} alt={\"Card image\"+index} style={{width:\"100%\"}}></img>\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">{movie.title}</h6>\n                <p class=\"card-text\">Year: {movie.release_date.slice(0,4)}</p>\n                <p class=\"card-text\">Punctuation: {movie.vote_average}</p>\n                <button onClick={() => props.addFavorite(props.tokenUserId,movie,{route})} className={props.tokenUserId === null || movie.user === true ? \"d-none\": \"btn btn-primary\"}>Add to favorites</button>\n              </div>\n            </div>\n          </div> \n        )}\n      </div>\n    </div>\n  );   \n}\n\n// keys values del state\nconst mapStateToProps = state => {\n  return {\n    broken: state.broken,\n    upcomingMovies: state.upcomingMovies,\n    addMovie: state.addMovie,\n    tokenUserId: state.tokenUserId,\n  }\n}\n\n// metodos \nconst mapDispatchToProps = dispatch => {\n  return {\n    getInfoUpcomingUser(route, tokenUserId){\n      dispatch(getInfoUpcomingUser(route, tokenUserId));\n    },\n    getInfoUpcomingNotUser(route){\n      dispatch(getInfoUpcomingNotUser(route));\n    },\n    addFavorite(movie,tokenUserId,route){\n      dispatch(addFavorite(movie,tokenUserId,route));\n    }\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upcoming);","import '../stylesheets/views.css';\nimport React, {useEffect} from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {getInfoNowPlayingUser, getInfoNowPlayingNotUser, addFavorite} from \"../actionCreators\";\n\n\nconst NowPlaying = (props) => {\n  var route = \"https://api.themoviedb.org/3/movie/now_playing?api_key=ab577ff2988024eaa963076929b07afb&language=en-US&page=1\";\n\n  useEffect(() => {\n    if (props.tokenUserId === null){\n      props.getInfoNowPlayingNotUser(route);\n    } else{\n      props.getInfoNowPlayingUser(route, props.tokenUserId);\n    }\n  }, [props.addMovie]); //useEffect se ejecuta al cargarse el componente y cada que props.addMovie evitando un bucle infinito\n\n  if (props.broken === true) {\n    return <Redirect to=\"/broken\" />\n  }\n\n  return (\n    <div class=\"container\">\n      <div className={props.addMovie === false ? \"d-none\": \"float-right sticky-top alert alert-success\"}>Movie added.</div>\n      <div class=\"btn-group mb-4\">\n        <Link to=\"/\" class=\"btn btn-info\">Top rated</Link>\n        <Link to=\"/popular\" class=\"btn btn-info\">Popular</Link>\n        <Link to=\"/upcoming\" class=\"btn btn-info\">Upcoming</Link>\n      </div>\n      <h2 class=\"text-center mb-4\">Now playing</h2>\n      <hr></hr>\n      <div class=\"row justify-content-around\">\n        {props.nowPlayingMovies.map((movie,index) =>\n          <div class=\"col-lg-3 col-md-4 col-sm-6 col-9\">\n            <div class=\"card\">   \n              <img class=\"card-img-top\" src={ \"https://image.tmdb.org/t/p/w220_and_h330_face\"+movie.poster_path} alt={\"Card image\"+index} style={{width:\"100%\"}}></img>\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">{movie.title}</h6>\n                <p class=\"card-text\">Year: {movie.release_date.slice(0,4)}</p>\n                <p class=\"card-text\">Punctuation: {movie.vote_average}</p>\n                <button onClick={() => props.addFavorite(props.tokenUserId,movie,{route})} className={props.tokenUserId === null || movie.user === true ? \"d-none\": \"btn btn-primary\"}>Add to favorites</button>\n              </div>\n            </div>\n          </div> \n        )}\n      </div>\n    </div>\n  );   \n}\n\n// keys values del state\nconst mapStateToProps = state => {\n  return {\n    broken: state.broken,\n    nowPlayingMovies: state.nowPlayingMovies,\n    addMovie: state.addMovie,\n    tokenUserId: state.tokenUserId,\n  }\n}\n\n// metodos \nconst mapDispatchToProps = dispatch => {\n  return {\n    getInfoNowPlayingUser(route, tokenUserId){\n      dispatch(getInfoNowPlayingUser(route, tokenUserId));\n    },\n    getInfoNowPlayingNotUser(route){\n      dispatch(getInfoNowPlayingNotUser(route));\n    },\n    addFavorite(movie,tokenUserId,route){\n      dispatch(addFavorite(movie,tokenUserId,route));\n    }\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NowPlaying);","import React, {useEffect} from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {updateLogin, closeUserExists, changeRegister, submitRegister} from \"../actionCreators\";\n\n  \nconst Register = (props) => {\n  const notBucle = null;\n  \n  useEffect(() => { //useEffect se ejecuta al cargarse el componente y notBucle cambia(nunca) evitando un bucle infinito\n    props.updateLogin();\n  }, [notBucle]);\n\n  if (props.broken === true) {\n    return <Redirect to=\"/broken\" />\n  }\n\n  if (props.redirectRegister != null) {\n    return <Redirect to={props.redirectRegister} />\n  }  \n\n  if (props.tokenUserId != null) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <div class=\"container\">\n      <div className={props.errorRegister === false ? \"d-none\": \"alert alert-danger alert-dismissible fade show\"}>\n        <button onClick={props.closeUserExists} type=\"button\" class=\"close\">&times;</button>The user already exists, enter a different user.\n      </div>\n      <div class=\"row justify-content-center\">\n        <div class=\"col-9 col-sm-6 col-md-5 col-lg-4\">\n          <h2 class=\"mb-4 text-center\">Register</h2>\n          <form onSubmit={(event) => props.submitRegister(props.emailRegister, props.passwordRegister, event)}>\n            <div class=\"form-group\">\n              <label for=\"email\">Email:</label>\n              <input type=\"email\" className={props.wrongEntry1Register === false ? \"form-control\": \"is-invalid form-control\"} value={props.emailRegister} onChange={props.changeRegister} name=\"email\" id=\"email\" placeholder=\"Enter email\"></input>\n              <div className={props.wrongEntry1Register === false ? \"d-none\": \"text-danger\"}>Wrong entry</div>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"pwd\">Password:</label>\n              <input type=\"password\" className={props.wrongEntry2Register === false ? \"form-control\": \"is-invalid form-control\"} value={props.passwordRegister} onChange={props.changeRegister} name=\"password\" id=\"password\" placeholder=\"Enter password\"></input>\n              <div className={props.wrongEntry2Register === false ? \"d-none\": \"text-danger\"}>Wrong entry</div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-block \">Register</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// keys values del state\nconst mapStateToProps = state => {\n  return {\n    broken: state.broken,\n    emailRegister: state.emailRegister,\n    passwordRegister: state.passwordRegister,\n    errorRegister: state.errorRegister,\n    tokenUserId: state.tokenUserId,\n    redirectRegister: state.redirectRegister,\n    wrongEntry1Register: state.wrongEntry1Register,\n    wrongEntry2Register: state.wrongEntry2Register,\n    newRegister: state.newRegister\n  }\n}\n\n// metodos \nconst mapDispatchToProps = dispatch => {\n  return {\n    updateLogin(){\n      dispatch(updateLogin());\n    },\n    closeUserExists(){\n      dispatch(closeUserExists());\n    },\n    changeRegister(event){\n      dispatch(changeRegister(event));\n    },\n    submitRegister(email,password,event){\n      event.preventDefault();\n      dispatch(submitRegister(email,password))\n    }\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","import React, {useEffect} from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {updateRedirectRegister, updateRegister, closeErrorLogin, changeLogin, submitLogin} from \"../actionCreators\";\n\n\nconst Login = (props) => {  //useEffect se ejecuta al cargarse el componente y notBucle cambia(nunca) evitando un bucle infinito\n  const notBucle = null;\n  \n  useEffect(() => {\n    props.updateRedirectRegister();\n    props.updateRegister();\n  }, [notBucle]); \n\n  if (props.broken === true) {\n    return <Redirect to=\"/broken\" />\n  }\n\n  if (props.tokenUserId != null) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <div class=\"container\">\n      <div className={props.newRegister === false ? \"d-none\": \"alert alert-success\"}>Successful registration. You can now log in with your username.</div>\n      <div className={props.errorLogin === false ? \"d-none\": \"alert alert-danger alert-dismissible fade show\"}>\n        <button onClick={props.closeErrorLogin} type=\"button\" class=\"close\">&times;</button>Invalid email and / or password. Try again.\n      </div>\n      <div class=\"row justify-content-center\">\n        <div class=\"col-9 col-sm-6 col-md-5 col-lg-4\">\n          <h2 class=\"mb-4 text-center\">Login</h2>\n          <form onSubmit={(event) => props.submitLogin(props.emailLogin, props.passwordLogin, event)}>\n            <div class=\"form-group\">\n              <label for=\"email\">Email:</label>\n              <input type=\"email\" className={props.wrongEntry1Login === false ? \"form-control\": \"is-invalid form-control\"} value={props.emailLogin} onChange={props.changeLogin} name=\"email\" id=\"email\" placeholder=\"Enter email\"></input>\n              <div className={props.wrongEntry1Login === false ? \"d-none\": \"text-danger\"}>Wrong entry</div>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"pwd\">Password:</label>\n              <input type=\"password\" className={props.wrongEntry2Login === false ? \"form-control\": \"is-invalid form-control\"} value={props.passwordLogin} onChange={props.changeLogin} name=\"password\" id=\"password\" placeholder=\"Enter password\"></input>\n              <div className={props.wrongEntry2Login === false ? \"d-none\": \"text-danger\"}>Wrong entry</div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-block \">Submit</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// keys values del state\nconst mapStateToProps = state => {\n  return {\n    broken: state.broken,\n    emailLogin: state.emailLogin,\n    passwordLogin: state.passwordLogin,\n    errorLogin: state.errorLogin,\n    tokenUserId: state.tokenUserId,\n    redirectRegister: state.redirectRegister,\n    wrongEntry1Login: state.wrongEntry1Login,\n    wrongEntry2Login: state.wrongEntry2Login,\n    newRegister: state.newRegister\n  }\n}\n\n// metodos \nconst mapDispatchToProps = dispatch => {\n  return {\n    updateRedirectRegister(){\n      dispatch(updateRedirectRegister());\n    },\n    updateRegister(){\n      dispatch(updateRegister());\n    },\n    closeErrorLogin(){\n      dispatch(closeErrorLogin());\n    },\n    changeLogin(event){\n      dispatch(changeLogin(event));\n    },\n    submitLogin(email,password,event){\n      event.preventDefault();\n      dispatch(submitLogin(email,password))\n    }\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {currentUser} from \"../actionCreators\";\n\n\nconst Header = (props) => { \n  return (\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark mb-5\">\n      <div class=\"container\">\n        <Link to=\"/\" class=\"navbar-brand\">Movies</Link>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        \n        <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n          <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n          </ul>\n          <form class=\"form-inline my-2 my-lg-0\">\n            <div class=\"navbar-nav\">\n              <Link to=\"/favorites\" className={props.tokenUserId === null ? \"d-none\": \"nav-link\"}>Favorites</Link>\n              <Link to=\"/\" className={props.tokenUserId === null ? \"d-none\": \"nav-link\"} onClick={props.logout}>Logout</Link>\n              <Link to=\"/login\" className={props.tokenUserId !== null ? \"d-none\": \"nav-link\"}>Login</Link>\n              <Link to=\"/register\" className={props.tokenUserId !== null ? \"d-none\": \"nav-link\"}>Register</Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </nav>   \n  );\n}\n\n// keys values del state\nconst mapStateToProps = state => {\n  return {\n    tokenUserId: state.tokenUserId,\n    emailLogin: state.emailLogin,\n    passwordLogin: state.passwordLogin,\n    wrongEntry1Login: state.wrongEntry1Login,\n    wrongEntry2Login: state.wrongEntry2Login,\n    emailRegister: state.emailRegister,\n    passwordRegister: state.passwordRegister,\n    wrongEntry1Register: state.wrongEntry1Register,\n    wrongEntry2Register: state.wrongEntry2Register\n  }\n}\n\n// metodos \nconst mapDispatchToProps = dispatch => {\n  return {\n    logout(){\n      localStorage.removeItem('tokenUserId');\n      dispatch(currentUser());\n    }\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, {useEffect} from 'react';\nimport { connect } from \"react-redux\";\nimport {updateBrokenFalse} from \"../actionCreators\";\n\n\nconst Broken = (props) => { //componente que se muestra cuando hay un err en alguna peticion axios a las API(el backend o base de datos estan offline)\n  const notBucle = null;\n  \n  useEffect(() => {\n    props.updateBrokenFalse();\n  }, [notBucle]); \n\n  return (\n    <div>\n      <h3>Something is broken!</h3>\n    </div>     \n  );\n}\n\n// keys values del state\nconst mapStateToProps = state => {\n  return {\n    broken: state.broken\n  }\n}\n\n// metodos \nconst mapDispatchToProps = dispatch => {\n  return {\n    updateBrokenFalse(){\n      dispatch(updateBrokenFalse());\n    }\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Broken);","import React from 'react';\n\n\nconst NoMatch = () => { \n  return (\n    <div>\n      <h3>Route no match</h3>\n    </div>   \n  );\n}\n\n\nexport default NoMatch;","import './stylesheets/App.css';\nimport TopRated from './components/top-rated';\nimport Favorites from './components/favorites';\nimport Popular from './components/popular';\nimport Upcoming from './components/upcoming';\nimport NowPlaying from './components/now-playing';\nimport Register from './components/register';\nimport Login from './components/login';\nimport Header from './components/header';\nimport Broken from './components/broken';\nimport NoMatch from './components/noMatch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React, { Component } from 'react';\nimport {HashRouter, Switch, Route} from \"react-router-dom\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <Switch>\n            <Route exact path=\"/\">\n             <Header /> \n             <TopRated />  \n            </Route>\n            <Route exact path=\"/favorites\">\n              <Header />\n              <Favorites />\n            </Route>\n            <Route path=\"/popular\">\n              <Header />\n              <Popular />\n            </Route>\n            <Route path=\"/upcoming\">\n              <Header />\n              <Upcoming />\n            </Route>\n            <Route path=\"/now-playing\">\n              <Header />\n              <NowPlaying />\n            </Route>\n            <Route path=\"/register\">\n              <Header />\n              <Register />\n            </Route>\n            <Route path=\"/login\">\n              <Header />\n              <Login />\n            </Route>\n            <Route path=\"/broken\">\n              <Broken />\n            </Route>\n            <Route exact path=\"*\">\n              <NoMatch />\n            </Route>\n          </Switch>\n        </div>\n      </HashRouter>  \n    );\n  }\n}\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\n\n\nconst reducer = (state,action) => {\n  if( action.type === \"ESTABLECIENDO_USUARIO_ACTUAL\"){ //todas los componentes\n    return {\n      ...state,\n      tokenUserId: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_BROKEN\"){ //todas los componentes\n    return {\n      ...state,\n      broken: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_MENSAJE_DE_REGISTRO_EXITOSO\"){ //login\n  \treturn {\n  \t  ...state,\n  \t  newRegister: action.object\n  \t}\n  } else if(action.type === \"ACTUALIZANDO_MENSAJE_DE_USUARIO_INVALIDO\"){ //login\n    return {\n      ...state,\n      errorLogin: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_EMAIL_DE_LOGIN\"){ //login\n    return {\n      ...state,\n      emailLogin: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_PASSWORD_DE_LOGIN\"){ //login\n    return {\n      ...state,\n      passwordLogin: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_WRONGENTRY1_DE_LOGIN\"){ //login\n    return {\n      ...state,\n      wrongEntry1Login: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_WRONGENTRY2_DE_LOGIN\"){ //login\n    return {\n      ...state,\n      wrongEntry2Login: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_MENSAJE_DE_USUARIO_YA_EXISTE\"){ //register\n    return {\n      ...state,\n      errorRegister: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_EMAIL_DE_REGISTER\"){ //register\n    return {\n      ...state,\n      emailRegister: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_PASSWORD_DE_REGISTER\"){ //register\n    return {\n      ...state,\n      passwordRegister: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_WRONGENTRY1_DE_REGISTER\"){ //register\n    return {\n      ...state,\n      wrongEntry1Register: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_WRONGENTRY2_DE_REGISTER\"){ //register\n    return {\n      ...state,\n      wrongEntry2Register: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_REDIRECTREGISTER\"){ //register\n    return {\n      ...state,\n      redirectRegister: action.object\n    }\n  } else if(action.type === \"OBTENIENDO_PELICULAS_FAVORITAS_DEL_USUARIO\"){ //favorites\n    return {\n      ...state,\n      userFavorites: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_MENSAJE_DE_PELICULA_ELIMINADA\"){ //favorites\n    return {\n      ...state,\n      movieDeleted: action.object\n    }\n  } else if(action.type === \"ESTABLECIENDO_PELICULAS_DE_LA_VISTA_NOWPLAYING\"){ //now-playing\n    return {\n      ...state,\n      nowPlayingMovies: action.object\n    }\n  } else if(action.type === \"ESTABLECIENDO_PELICULAS_DE_LA_VISTA_POPULAR\"){ //popular\n    return {\n      ...state,\n      popularMovies: action.object\n    }\n  } else if(action.type === \"ESTABLECIENDO_PELICULAS_DE_LA_VISTA_TOP-RATED\"){ //top-rated\n    return {\n      ...state,\n      topRatedMovies: action.object\n    }\n  } else if(action.type === \"ESTABLECIENDO_PELICULAS_DE_LA_VISTA_UPCOMING\"){ //upcoming\n    return {\n      ...state,\n      upcomingMovies: action.object\n    }\n  } else if(action.type === \"ACTUALIZANDO_MENSAJE_DE_PELICULA_AGREGADA\"){ //componentes de tipo categoria\n    return {\n      ...state,\n      addMovie: action.object\n    }\n  }\n  return state;\n};\n\n\nexport default createStore(reducer,{\n  tokenUserId:localStorage.getItem('tokenUserId'),\n  broken: false, \n  newRegister: false,\n  errorLogin: false,\n  emailLogin: \"\",\n  passwordLogin: \"\",\n  wrongEntry1Login: false,\n  wrongEntry2Login: false,\n  errorRegister: false,\n  emailRegister: \"\",\n  passwordRegister: \"\",\n  wrongEntry1Register: false,\n  wrongEntry2Register: false,\n  redirectRegister: null,\n  userFavorites: [],\n  movieDeleted: false,\n  nowPlayingMovies: [],\n  popularMovies: [],\n  topRatedMovies: [],\n  upcomingMovies: [],\n  addMovie: false\n}, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./store\";\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}